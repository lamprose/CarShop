<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.carshop.server.dao.AdminMapper" >

    <resultMap id="ShopsMap" type="Shops">
        <id column="shopId" property="shopId"/>
        <result column="shopName" property="shopName"/>
        <result column="password" property="password"/>
        <result column="phone" property="phone"/>
        <result column="token" property="token"/>
        <result column="status" property="status"/>
        <association column="brandId" property="brand"
                     select="com.carshop.server.dao.BrandsMapper.selectOneById"
                     javaType="Brands"/>
    </resultMap>
    <select id="selectOneById" resultMap="ShopsMap">
        SELECT * FROM shops WHERE shopId = #{shopId}
    </select>

    <select id="selectOneByBrandId" resultMap="ShopsMap">
        SELECT * FROM shops WHERE brandId = #{brandId}
    </select>

    <select id="selectOneByToken" resultMap="ShopsMap">
        SELECT * FROM shops WHERE token = #{token}
    </select>

    <select id="selectAll" resultMap="ShopsMap">
        SELECT * FROM shops WHERE shopId!='superAdmin'
    </select>

    <!--根据店铺名进行模糊查询-->
    <select id="selectAllNameSimilar" resultMap="ShopsMap">
        SELECT * FROM shops WHERE shopName LIKE '%${value}%' AND shopId!='superAdmin'
    </select>

    <update id="updateStatusByShopId">
        UPDATE shops
        <set>
            <if test="status=='offline'">
                status = "online",
            </if>
            <if test="status=='online'">
                status = "offline",
            </if>
        </set>
        WHERE shopId = #{shopId}
    </update>

    <update id="updateTokenByShopId">
        UPDATE shops SET token = #{token} WHERE shopId = #{shopId}
    </update>

    <update id="updateStatusToOnlineByToken">
        UPDATE shops SET status = 'online' WHERE token = #{token}
    </update>

    <update id="updatePassAndTokenById">
        UPDATE shops SET password = #{password},token = #{token} WHERE shopId = #{shopId}
    </update>

    <insert id="insertOneShop">
        INSERT INTO shops VALUES(#{shopId}, #{shopName}, #{password}, #{brand.brandId}, #{phone}, #{token}, #{status})
    </insert>

    <!--批量删除商铺-->
    <delete id="deleteShopsByIds">
        DELETE FROM
        shops
        WHERE shopId in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item.shopId}
        </foreach>
    </delete>
</mapper>